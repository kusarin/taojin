<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
  
    <context:component-scan base-package="cn.it.dao.impl"></context:component-scan>
  
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
		<property name="url" value="jdbc:mysql://localhost:3306/taojin"/>
		<property name="username" value="root"/>
		<property name="password" value="123456"/>
		<property name="filters" value="stat,log4j,wall"/>
		<property name="maxActive" value="50"/>
		<property name="initialSize" value="1"/>
		<property name="maxWait" value="60000"/>
		<property name="minIdle" value="1"/>
		<property name="timeBetweenEvictionRunsMillis" value="3000"/>
		<property name="minEvictableIdleTimeMillis" value="300000"/>
		<property name="validationQuery" value="SELECT '*"/>
		<property name="testWhileIdle" value="true"/>
		<property name="testOnBorrow" value="false"/>
		<property name="testOnReturn" value="false"/>
		<property name="poolPreparedStatements" value="true"/>
		<property name="maxPoolPreparedStatementPerConnectionSize"
			value="20" />
	</bean>


	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="mapperLocations" value="classpath:cn/it/dao/impl/*.xml"></property>
	</bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="cn.it.dao"></property>
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>


	<!-- 事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<!-- 数据源 -->
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- 通知 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
	  <tx:attributes>
	     <!-- 传播行为 -->
	    <tx:method name="save*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
	    <tx:method name="insert*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
	    <tx:method name="delete*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
	    <tx:method name="update*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
	    <tx:method name="find*" propagation="SUPPORTS" read-only="true"/>
	    <tx:method name="get*" propagation="SUPPORTS" read-only="true"/>
	  </tx:attributes>
	</tx:advice>
	
	<!-- 切面 -->
		<aop:config proxy-target-class="true">
		  <aop:advisor advice-ref="txAdvice" pointcut="execution(* cn.it.service.impl.*.*(..))"/>
		</aop:config>
</beans>
